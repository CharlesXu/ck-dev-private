{
  "backup_data_uid": "6b29779ab49f449f",
  "data_name": "clblast-generate-dataset",
  "no_compile": "yes",
  "no_target_file": "yes",
  "print_files_after_run": [
    "tmp-stdout.tmp",
    "tmp-stderr.tmp"
  ],
  "process_in_tmp": "yes",
  "program": "yes",
  "run_cmds": {
    "Grid-Of-Two": {
      "ignore_return_code": "no",
      "run_time": {
        "run_cmd_main": "$<<CK_ENV_COMPILER_PYTHON_FILE>>$ ../generate_dataset.py --kernel $<<CK_KERNEL_LIST>>$ --platform=$<<CK_TARGET_ARCHITECTURE>>$ --output_dir=$<<CK_OUTPUT_DIR>>$/Grid-Of-Two --load_matrix_from_csv ../dataset/grid_of_two.csv --device_id $<<CK_COMPUTE_PLATFORM_ID>>$",
        "run_cmd_out1": "tmp-stdout.tmp",
        "run_cmd_out2": "tmp-stderr.tmp",
        "run_output_files": []
      }
    },
    "Power-Of-Two": {
      "ignore_return_code": "no",
      "run_time": {
        "run_cmd_main": "$<<CK_ENV_COMPILER_PYTHON_FILE>>$ ../generate_dataset.py --kernel $<<CK_KERNEL_LIST>>$ --platform=$<<CK_TARGET_ARCHITECTURE>>$ --output_dir=$<<CK_OUTPUT_DIR>>$/Power-Of-Two --load_matrix_from_csv ../dataset/power_of_two.csv --device_id $<<CK_COMPUTE_PLATFORM_ID>>$",
        "run_cmd_out1": "tmp-stdout.tmp",
        "run_cmd_out2": "tmp-stderr.tmp",
        "run_output_files": []
      }
    },
    "Toy": {
      "ignore_return_code": "no",
      "run_time": {
        "run_cmd_main": "$<<CK_ENV_COMPILER_PYTHON_FILE>>$ ../generate_dataset.py --kernel $<<CK_KERNEL_LIST>>$ --platform=$<<CK_TARGET_ARCHITECTURE>>$ --output_dir=$<<CK_OUTPUT_DIR>>$/Toy --load_matrix_from_csv ../dataset/Toy.csv --device_id $<<CK_COMPUTE_PLATFORM_ID>>$",
        "run_cmd_out1": "tmp-stdout.tmp",
        "run_cmd_out2": "tmp-stderr.tmp",
        "run_output_files": []
      }
    },
    "AntonNet": {
      "ignore_return_code": "no",
      "run_time": {
        "run_cmd_main": "$<<CK_ENV_COMPILER_PYTHON_FILE>>$ ../generate_dataset.py --kernel $<<CK_KERNEL_LIST>>$ --platform=$<<CK_TARGET_ARCHITECTURE>>$ --output_dir=$<<CK_OUTPUT_DIR>>$/AntonNet --load_matrix_from_csv ../dataset/AntonNet.csv --device_id $<<CK_COMPUTE_PLATFORM_ID>>$",
        "run_cmd_out1": "tmp-stdout.tmp",
        "run_cmd_out2": "tmp-stderr.tmp",
        "run_output_files": []
      }
    }
  },
  "run_deps": {
    "compiler": {
      "local": "yes",
      "name": "C++ compiler",
      "sort": 0,
      "tags": "compiler,lang-c,gcc"
    },
    "lib-clblast": {
      "local": "yes",
      "name": "CLBlast MultiConf ",
      "skip_pruning_by_other_deps": "yes",
      "sort": 10,
      "tags": "lib,clblast,multiconf,tune"
    },
    "python": {
      "local": "yes",
      "name": "python",
      "sort": 8,
      "tags": "compiler,lang-python,python"
    }
  },
  "run_vars": {
    "CK_GPU_FREQUENCY": "",
    "CK_KERNEL_LIST": "xgemm xgemm_direct",
    "CK_OUTPUT_DIR": "/tmp",
    "CK_TARGET_ARCHITECTURE": "Nvidia_P100",
    "CK_COMPUTE_DEVICE_ID": 0,
    "CK_COMPUTE_PLATFORM_ID": 0
  },
  "tags": [
    "generate",
    "dataset",
    "program",
    "multiconf",
    "clblast"
  ]
}
