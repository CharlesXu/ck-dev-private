{
  "backup_data_uid": "1db416a3b47405a8", 
  "compiler_add_include_as_env_from_deps": [
    "CK_ENV_LIB_STDCPP_INCLUDE", 
    "CK_ENV_LIB_STDCPP_INCLUDE_EXTRA", 
    "CK_ENV_LIB_STDCPP_DYNAMIC"
  ], 
  "data_name": "clblast-tune", 
  "extra_ld_vars": "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$ $<<CK_ENV_LIB_STDCPP_STATIC>>$", 
  "force_copy_input_files_to_remote": "yes", 
  "no_compile": "yes", 
  "no_target_file": "yes", 
  "only_for_target_os_tags": [
    "linux", 
    "windows", 
    "android"
  ], 
  "print_files_after_run": [
    "stdout.log", 
    "stderr.log"
  ], 
  "process_in_tmp": "yes", 
  "program": "yes", 
  "run_cmds": {
    "default": {
      "ignore_return_code": "no", 
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-clblast-client.json", 
        "need_compute_device": "opencl", 
        "post_process_cmds": [
          "python $#src_path_local#$ck_postprocess.py"
        ], 
        "post_process_via_ck": "yes", 
        "pre_process_cmds": [], 
        "pre_process_via_ck": {
          "script_name": "ck_preprocess"
        }, 
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_client_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -cblas 0 -clblas 0 -warm_up", 
        "run_cmd_main_remote": "chmod 755 ./clblast_client_xgemm ; ./clblast_client_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -cblas 0 -clblas 0 -warm_up", 
        "run_cmd_out1": "stdout.log", 
        "run_cmd_out2": "stderr.log", 
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_client_xgemm", 
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ]
      }
    }, 
    "xgemm-fp16": {
      "ignore_return_code": "no", 
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-clblast-tune.json", 
        "need_compute_device": "opencl", 
        "post_process_cmds": [
          "python $#src_path_local#$postprocess_time.py"
        ], 
        "post_process_via_ck": "yes", 
        "pre_process_cmds": [], 
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -precision 16", 
        "run_cmd_main_remote": "chmod 755 ./clblast_tuner_xgemm; ./clblast_tuner_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$  -precision 16", 
        "run_cmd_out1": "stdout.log", 
        "run_cmd_out2": "stderr.log", 
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm", 
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ], 
        "run_output_files": [
          "clblast_xgemm_1_16.json", 
          "clblast_xgemm_2_16.json"
        ]
      }
    }, 
    "xgemm-fp32": {
      "ignore_return_code": "no", 
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-clblast-tune.json", 
        "need_compute_device": "opencl", 
        "post_process_cmds": [
          "python $#src_path_local#$postprocess_time.py"
        ], 
        "post_process_via_ck": "yes", 
        "pre_process_cmds": [], 
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -precision 32 --strategy $<<CK_SEARCH_STRATEGY>>$ --psoSwarmSize $<<CK_PSO_SWARM_SIZE>>$ --psoInfG $<<CK_PSO_INF_G>>$ --psoInfL $<<CK_PSO_INF_L>>$ --psoInfR $<<CK_PSO_INF_R>>$", 
        "run_cmd_main_remote": "chmod 755 ./clblast_tuner_xgemm; ./clblast_tuner_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -precision 32", 
        "run_cmd_out1": "stdout.log", 
        "run_cmd_out2": "stderr.log", 
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm", 
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ], 
        "run_output_files": [
          "clblast_xgemm_1_32.json", 
          "clblast_xgemm_2_32.json"
        ]
      }
    }, 
    "xgemm_direct-fp16": {
      "ignore_return_code": "no", 
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-clblast-tune.json", 
        "need_compute_device": "opencl", 
        "post_process_cmds": [
          "python $#src_path_local#$postprocess_time.py"
        ], 
        "post_process_via_ck": "yes", 
        "pre_process_cmds": [], 
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm_direct -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -precision 16", 
        "run_cmd_main_remote": "chmod 755 ./clblast_tuner_xgemm_direct ; ./clblast_tuner_xgemm_direct -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -precision 16", 
        "run_cmd_out1": "stdout.log", 
        "run_cmd_out2": "stderr.log", 
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm_direct", 
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ], 
        "run_output_files": [
          "clblast_xgemm_direct_1_16.json", 
          "clblast_xgemm_direct_2_16.json"
        ]
      }
    }, 
     "clblast_test_dvdt_runtime_check": {
      "ignore_return_code": "no",
      "run_time": {
        "need_compute_device": "opencl",
        "post_process_cmds": [],
        "post_process_via_ck": "no",
        "pre_process_cmds": [],
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_test_dvdt_runtime_check -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ -KWG $<<CK_CLBLAST_KWG>>$ -KWI $<<CK_CLBLAST_KWI>>$ -MDIMA $<<CK_CLBLAST_MDIMA>>$ -MDIMC $<<CK_CLBLAST_MDIMC>>$ -MWG $<<CK_CLBLAST_MWG>>$ -NDIMB $<<CK_CLBLAST_NDIMB>>$ -NDIMC $<<CK_CLBLAST_NDIMC>>$ -NWG $<<CK_CLBLAST_NWG>>$ -SA $<<CK_CLBLAST_SA>>$ -SB $<<CK_CLBLAST_SB>>$ -STRM $<<CK_CLBLAST_STRM>>$ -STRN $<<CK_CLBLAST_STRN>>$ -VWM $<<CK_CLBLAST_VWM>>$ -VWN $<<CK_CLBLAST_VWN>>$",
        "run_cmd_main_remote": "chmod 755 ./clblast_test_dvdt_runtime_check ; ./clblast_test_dvdt_runtime_check -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$  -KWG $<<CK_CLBLAST_KWG>>$ -KWI $<<CK_CLBLAST_KWI>>$ -MDIMA $<<CK_CLBLAST_MDIMA>>$ -MDIMC $<<CK_CLBLAST_MDIMC>>$ -MWG $<<CK_CLBLAST_MWG>>$ -NDIMB $<<CK_CLBLAST_NDIMB>>$ -NDIMC $<<CK_CLBLAST_NDIMC>>$ -NWG $<<CK_CLBLAST_NWG>>$ -SA $<<CK_CLBLAST_SA>>$ -SB $<<CK_CLBLAST_SB>>$ -STRM $<<CK_CLBLAST_STRM>>$ -STRN $<<CK_CLBLAST_STRN>>$ -VWM $<<CK_CLBLAST_VWM>>$ -VWN $<<CK_CLBLAST_VWN>>$",
        "run_cmd_out1": "stdout.log",
        "run_cmd_out2": "stderr.log",
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_test_dvdt_runtime_check",
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ],
        "run_output_files": [
          "clblast_xgemm_override.json"
        ]
      }
    },
    "xgemm_direct-fp32": {
      "ignore_return_code": "no", 
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-clblast-tune.json", 
        "need_compute_device": "opencl", 
        "post_process_cmds": [
          "python $#src_path_local#$postprocess_time.py"
        ], 
        "post_process_via_ck": "yes", 
        "pre_process_cmds": [], 
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm_direct -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$", 
        "run_cmd_main_remote": "chmod 755 ./clblast_tuner_xgemm_direct ; ./clblast_tuner_xgemm_direct -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ ", 
        "run_cmd_out1": "stdout.log", 
        "run_cmd_out2": "stderr.log", 
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm_direct", 
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ], 
        "run_output_files": [
          "clblast_xgemm_direct_1_32.json", 
          "clblast_xgemm_direct_2_32.json"
        ]
      }
    },
    "test_dvdt-fp32":{
    "ignore_return_code": "no",
    "run_time": {
        "fine_grain_timer_file": "tmp-ck-clblast-tune.json",
        "need_compute_device": "opencl",
        "post_process_cmds": [
          "python $#src_path_local#$postprocess_time.py"
        ], 
        "post_process_via_ck": "yes",
        "pre_process_cmds": [],
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_client_test_dvdt -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ --warm_up",
        "run_cmd_main_remote": "chmod 755 ./clblast_client_test_dvdt ; ./clblast_client_test_dvdt -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$ ",
        "run_cmd_out1": "stdout.log",
        "run_cmd_out2": "stderr.log",
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_client_test_dvdt",
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ], 
        "run_output_files": [
          "clblast_xgemm_direct_1_32.json",
          "clblast_xgemm_direct_2_32.json"
        ]
      }
    }  
  }, 
  "run_deps": {
    "compiler": {
      "local": "yes", 
      "name": "C++ compiler", 
      "sort": 0, 
      "tags": "compiler,lang-cpp"
    }, 
    "lib-clblast": {
      "local": "yes", 
      "name": "CLBlast library", 
      "sort": 10, 
      "tags": "lib,clblast-tune"
    }, 
    "opencl": {
      "local": "yes", 
      "name": "OpenCL library", 
      "sort": 20, 
      "tags": "lib,opencl"
    }, 
    "tool-cltune": {
      "local": "yes", 
      "name": "CLTune tool", 
      "sort": 40, 
      "tags": "tool,cltune"
    }
  }, 
  "run_vars": {
    "CK_CLBLAST_BEST_CONF_FILE": "tmp-ck-clblast-tune.json", 
    "CK_CLBLAST_FRAC": 256, 
    "CK_CLBLAST_ITERATIONS": 5, 
    "CK_CLBLAST_KSIZE": 128, 
    "CK_CLBLAST_MSIZE": 128, 
    "CK_CLBLAST_NSIZE": 128, 
    "CK_COMPUTE_DEVICE_ID": 0, 
    "CK_COMPUTE_PLATFORM_ID": 0, 
    "CK_FORCE_RECOMPILE": 0, 
    "CK_PSO_INF_G": 0.2, 
    "CK_PSO_INF_L": 0.3, 
    "CK_PSO_INF_R": 0.5, 
    "CK_PSO_SWARM_SIZE": 32, 
    "CK_SEARCH_STRATEGY": 0, 
    "CK_TUNER_NUM_OF_STRATEGIES": 1,
    "CK_CLBLAST_KWG" : 32,
    "CK_CLBLAST_KWI" : 2,
    "CK_CLBLAST_MDIMA" : 8,
    "CK_CLBLAST_MDIMC" : 8,
    "CK_CLBLAST_MWG" : 64,
    "CK_CLBLAST_NDIMB" : 16,
    "CK_CLBLAST_NDIMC" : 16,
    "CK_CLBLAST_NWG" : 64,
    "CK_CLBLAST_SA" : 1,
    "CK_CLBLAST_SB" : 1,
    "CK_CLBLAST_STRM" : 0,
    "CK_CLBLAST_STRN" : 0,
    "CK_CLBLAST_VWM" : 4,
    "CK_CLBLAST_VWN" : 4
  }, 
  "tags": [
    "clblast", 
    "cltune", 
    "opencl", 
    "sgemm"
  ]
}
